#!/usr/bin/env python
import argparse
import os, sys
from time import strftime

import numpy as np
from tqdm.auto import tqdm

from peoplefinder.GetData import get_data
from peoplefinder.SaveData import save_data
from peoplefinder.common import *
import logging, traceback


_HOME_ = os.getenv('userprofile')

_SAVEDIR_ = os.path.join(_HOME_, 'peoplefinder')
if not os.path.exists(_SAVEDIR_):
    # put this in setup
    make_dirs(sys.platform)

_NEW_FOLDER_NAME_ = strftime('%d_%m_%y-%Hh%Mmin')
_NEW_FOLDER_PATH_ = os.path.join(_SAVEDIR_, _NEW_FOLDER_NAME_)
try:
    os.mkdir(_NEW_FOLDER_PATH_)
except FileExistsError:
    _NEW_FOLDER_PATH_ = os.path.join(_SAVEDIR_, get_dirs(_SAVEDIR_)[-1])

parser = argparse.ArgumentParser(description='collects whatsapp profile pictures.')
parser.add_argument(
    '-n', '--number',
    dest='number',
    default=10,
    help='how many numbers to search?',
    type=int
)
parser.add_argument(
    '-m', '--min',
    dest='min',
    default=80000000,
    help='lower limit in phone numbers.',
    type=int
)
parser.add_argument(
    '-M', '--max',
    dest='max',
    default=99999999,
    help='upper limit in phone numbers.',
    type=int
)
parser.add_argument(
    '-d', '--ddd',
    dest='ddd',
    default=84,
    help='local area code.',
    type=int
)
parser.add_argument(
    '-r', '--random',
    dest='random',
    help='whether to pick random numbers between MIN and MAX or use input.txt',
    action='store_true',
)
parser.add_argument(
    '-s', '--source',
    dest='source',
    help='set source to get data',
    default=None,
)
parser.add_argument(
    '-db' , '--debug',
    dest='debug',
    help='show firefox while getting data',
    default=False,
    type=bool,
)

args = parser.parse_args()
N = args.number
pmin = args.min
pmax = args.max
ddd = args.ddd

if args.random:
    numbers = np.random.randint(pmin, pmax, N)
else:
    with open(os.path.join(_SAVEDIR_, 'input.txt')) as numbers_list:
        numbers = map(lambda x: int(x), numbers_list.readlines())

driver = login(args.debug)

try:
    for number in tqdm(numbers):
        phone = '55{0:02d}9{1:08d}'.format(ddd, number)
        data = get_data(driver, phone, _NEW_FOLDER_PATH_)
        if data is not None:
            filename, status = data
            save_data(_SAVEDIR_, phone, filename, status)
except Exception:
    logging.error(traceback.format_exc())
finally:
    driver.close()
    print('Driver closed')
    purge_empty_dirs()
